{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtare\\\\Desktop\\\\Web\\\\crwn\\\\client\\\\src\\\\components\\\\CartDropdown\\\\CartDropdown.jsx\";\nimport CartItem from '../CartItem/CartItem';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../Redux/Cart/CartSelcetors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../Redux/Cart/CartAction';\nimport { CartDropdownButton, CartDropdownContainer, CartItemsContainer, EmptyMessageContainer } from './CartDropdownStyles'; // connect passes dispatch into components as a prop if it does not supply as a second argument on connect(..,..); \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/_jsxDEV(CartDropdownContainer, {\n  children: [/*#__PURE__*/_jsxDEV(CartItemsContainer, {\n    children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(EmptyMessageContainer, {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CartDropdownButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    children: \"GO TO CHECKOUT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["C:/Users/mtare/Desktop/Web/crwn/client/src/components/CartDropdown/CartDropdown.jsx"],"names":["CartItem","connect","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropdownButton","CartDropdownContainer","CartItemsContainer","EmptyMessageContainer","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,eAAR,QAA8B,gCAA9B;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAAQC,gBAAR,QAA+B,6BAA/B;AAEA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,kBAApD,EAAwEC,qBAAxE,QAAqG,sBAArG,C,CAGA;;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACnB,QAAC,qBAAD;AAAA,0BACE,QAAC,kBAAD;AAAA,cACGF,SAAS,CAACG,MAAV,GACCH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBACpB,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADF,CADD,gBAKC,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF,eAUE,QAAC,kBAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,MAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMK,Y;AAsBN,MAAMS,eAAe,GAAGhB,wBAAwB,CAAC;AAC/CQ,EAAAA,SAAS,EAAET;AADoC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACkB,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import CartItem from '../CartItem/CartItem';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport {selectCartItems} from '../../Redux/Cart/CartSelcetors';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport {toggleCartHidden} from '../../Redux/Cart/CartAction';\r\n\r\nimport { CartDropdownButton, CartDropdownContainer, CartItemsContainer, EmptyMessageContainer } from './CartDropdownStyles';\r\n\r\n\r\n// connect passes dispatch into components as a prop if it does not supply as a second argument on connect(..,..); \r\n\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\r\n  <CartDropdownContainer>\r\n    <CartItemsContainer>\r\n      {cartItems.length ? (\r\n        cartItems.map(cartItem => (\r\n          <CartItem key={cartItem.id} item={cartItem} />\r\n        ))\r\n      ) : (\r\n        <EmptyMessageContainer>Your cart is empty</EmptyMessageContainer>\r\n      )}\r\n    </CartItemsContainer>\r\n    <CartDropdownButton\r\n      onClick={() => {\r\n        history.push('/checkout');\r\n        dispatch(toggleCartHidden());\r\n      }}\r\n    >\r\n      GO TO CHECKOUT\r\n    </CartDropdownButton>\r\n  </CartDropdownContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}