{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtare\\\\Desktop\\\\Web\\\\crwn\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { GlobalStyle } from './GlobalStyles';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from \"./pages/Homepage/Homepage\";\nimport ShopPage from './pages/Shop/Shop';\nimport Header from './components/Header/Header';\nimport SignInAndSignUpPage from './pages/SignInAndSignUp/SignInAndSignUp';\nimport { auth, createUserProfileDocument } from './Firebase/FirebaseUtils';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from './Redux/User/UserAction';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './Redux/User/UserSelectors';\nimport Checkout from './pages/Checkout/Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  setCurrentUser,\n  currentUser\n}) => {\n  _s();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }, [setCurrentUser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        component: ShopPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/Checkout\",\n        component: Checkout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(SignInAndSignUpPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mtare/Desktop/Web/crwn/client/src/App.js"],"names":["useEffect","GlobalStyle","Switch","Route","Redirect","HomePage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","connect","setCurrentUser","createStructuredSelector","selectCurrentUser","Checkout","App","currentUser","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,mBAAP,MAAgC,yCAAhC;AAEA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,0BAAhD;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,cAAR,QAA6B,yBAA7B;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,iBAAT,QAAkC,4BAAlC;AAEA,OAAOC,QAAP,MAAqB,2BAArB;;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAACJ,EAAAA,cAAD;AAAiBK,EAAAA;AAAjB,CAAD,KAAmC;AAAA;;AAE7CjB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACxC,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7BV,UAAAA,cAAc,CAAC;AACbW,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADA;AAEb,eAAGD,QAAQ,CAACE,IAAT;AAFU,WAAD,CAAd;AAID,SALD;AAMD;;AAEDZ,MAAAA,cAAc,CAACO,QAAD,CAAd;AACD,KAbD;AAcD,GAfQ,EAeN,CAACP,cAAD,CAfM,CAAT;AAiBA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEP;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,SAAS,EAAES;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,MAAM,EAAE,MACNE,WAAW,gBACT,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADS,gBAGT,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAPN;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAzCD;;GAAMD,G;;KAAAA,G;AA4CN,MAAMS,eAAe,GAAGZ,wBAAwB,CAAC;AAC/CI,EAAAA,WAAW,EAAEH;AADkC,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,cAAc,EAAEgB,IAAI,IAAID,QAAQ,CAACf,cAAc,CAACgB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,GAA7C,CAAf","sourcesContent":["import {useEffect} from 'react';\r\n\r\nimport { GlobalStyle } from './GlobalStyles';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport HomePage from \"./pages/Homepage/Homepage\";\r\n\r\nimport ShopPage from './pages/Shop/Shop';\r\n\r\nimport Header from './components/Header/Header';\r\n\r\nimport SignInAndSignUpPage from './pages/SignInAndSignUp/SignInAndSignUp';\r\n\r\nimport { auth, createUserProfileDocument } from './Firebase/FirebaseUtils';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {setCurrentUser} from './Redux/User/UserAction';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCurrentUser } from './Redux/User/UserSelectors';\r\n\r\nimport Checkout from './pages/Checkout/Checkout';\r\n\r\n\r\nconst App = ({setCurrentUser, currentUser}) => {\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async userAuth => {\r\n      if (userAuth) {\r\n        const userRef = await createUserProfileDocument(userAuth);\r\n\r\n        userRef.onSnapshot(snapShot => {\r\n          setCurrentUser({\r\n            id: snapShot.id,\r\n            ...snapShot.data()\r\n          });\r\n        });\r\n      }\r\n\r\n      setCurrentUser(userAuth);\r\n    });\r\n  }, [setCurrentUser])\r\n\r\n  return (\r\n    <div>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route path='/shop' component={ShopPage} />\r\n        <Route exact path='/Checkout' component={Checkout} />\r\n        <Route\r\n          exact\r\n          path='/signin'\r\n          render={() =>\r\n            currentUser ? (\r\n              <Redirect to='/' />\r\n            ) : (\r\n              <SignInAndSignUpPage />\r\n            )\r\n          }\r\n        />        \r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentUser: user => dispatch(setCurrentUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}