{"version":3,"sources":["Redux/Shop/ShopActions.js","Redux/Shop/ShopSelectors.js","components/CollectionItem/CollectionItemStyles.jsx","components/CollectionItem/CollectionItem.jsx","components/CollectionPreview/CollectionPreviewStyles.jsx","components/CollectionPreview/CollectionPreview.jsx","components/CollectionsOverview/CollectionsOverviewStyles.jsx","components/CollectionsOverview/CollectionsOverview.jsx","components/WithSpinner/WithSpinner.jsx","components/CollectionsOverview/CollectionsOverviewContainer.jsx","pages/Collection/CollectionStyles.jsx","pages/Collection/Collection.jsx","pages/Collection/CollectionContainer.jsx","pages/Shop/Shop.jsx"],"names":["fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","type","ShopActionTypes","FETCH_COLLECTIONS_START","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsSuccess","catch","error","errorMessage","message","FETCH_COLLECTIONS_FAILURE","selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","addItem","item","name","price","className","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","otherCollectionProps","WithSpinner","WrappedComponent","isLoading","otherProps","Spinner","compose","CollectionsOverview","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","ownProps","collectionUrlParam","params","collectionId","CollectionPage","useEffect","exact","component"],"mappings":"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","file":"static/js/6.1e8cce36.chunk.js","sourcesContent":["import ShopActionTypes from './ShopTypes';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from '../../Firebase/FirebaseUtils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  shop => !!shop.collections\r\n);","import styled from 'styled-components';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;","import { connect } from 'react-redux';\r\n\r\nimport {addItem} from '../../Redux/Cart/CartAction';\r\n\r\nimport { AddButton, BackgroundImage, CollectionFooterContainer, CollectionItemContainer, NameContainer, PriceContainer } from './CollectionItemStyles';\r\n\r\nconst CollectionItem = ({item, addItem }) => {\r\n\r\n  const {name, price, imageUrl} = item;\r\n  \r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className='image' imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted> ADD TO CART </AddButton>\r\n    </CollectionItemContainer>\r\n  ) \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 30px;\r\n  @media screen and (max-width: 800px) {\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.h1`\r\n  font-size: 28px;\r\n  margin-bottom: 25px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: grey;\r\n  }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;","import { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../CollectionItem/CollectionItem';\r\n\r\nimport { CollectionPreviewContainer, PreviewContainer, TitleContainer } from './CollectionPreviewStyles';\r\n\r\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\r\n  <CollectionPreviewContainer>\r\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\r\n      {title.toUpperCase()}\r\n    </TitleContainer>\r\n    <PreviewContainer>\r\n      {items\r\n        .filter((item, idx) => idx < 4)\r\n        .map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n    </PreviewContainer>\r\n  </CollectionPreviewContainer>\r\n);\r\n  \r\nexport default withRouter(CollectionPreview);","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;","import CollectionPreview from '../CollectionPreview/CollectionPreview';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport {selectCollectionsForPreview} from '../../Redux/Shop/ShopSelectors';\r\n\r\nimport { CollectionsOverviewContainer } from './CollectionsOverviewStyles';\r\n\r\nconst CollectionsOverview = ({ collections }) => (\r\n    <CollectionsOverviewContainer>\r\n      {collections.map(({ id, ...otherCollectionProps }) => (\r\n        <CollectionPreview key={id} {...otherCollectionProps} />\r\n      ))}\r\n    </CollectionsOverviewContainer>\r\n);\r\n  \r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview\r\n});\r\n  \r\nexport default connect(mapStateToProps)(CollectionsOverview);","import Spinner from '../Spinner/Spinner';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n  \r\nexport default WithSpinner;","import { connect } from \"react-redux\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { selectIsCollectionFetching } from '../../Redux/Shop/ShopSelectors';\r\n\r\nimport CollectionsOverview from './CollectionsOverview';\r\n\r\nimport WithSpinner from '../WithSpinner/WithSpinner';\r\n\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading: selectIsCollectionFetching\r\n});\r\n  \r\nconst CollectionsOverviewContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionsOverview);\r\n  \r\nexport default CollectionsOverviewContainer;","import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n  \r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;","import { connect } from 'react-redux';\r\n\r\nimport CollectionItem from '../../components/CollectionItem/CollectionItem';\r\n\r\nimport { selectCollection } from '../../Redux/Shop/ShopSelectors';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './CollectionStyles';\r\n\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection;\r\n\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\r\n\r\nimport { compose } from 'redux';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectIsCollectionsLoaded } from '../../Redux/Shop/ShopSelectors';\r\n\r\nimport WithSpinner from '../../components/WithSpinner/WithSpinner';\r\n\r\nimport CollectionPage from './Collection';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;","import {useEffect} from 'react';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport {fetchCollectionsStartAsync} from '../../Redux/Shop/ShopActions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverviewContainer from '../../components/CollectionsOverview/CollectionsOverviewContainer';\r\n\r\nimport CollectionPageContainer from '../Collection/CollectionContainer';\r\n\r\nconst ShopPage = ({fetchCollectionsStartAsync, match }) => {\r\n\r\n  useEffect(() => {\r\n    fetchCollectionsStartAsync();\r\n  }, [fetchCollectionsStartAsync]);\r\n\r\n  return (\r\n    <div className='shop-page'>\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        component={CollectionsOverviewContainer}\r\n      />\r\n      <Route\r\n        path={`${match.path}/:collectionId`}\r\n        component={CollectionPageContainer}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ShopPage);"],"sourceRoot":""}