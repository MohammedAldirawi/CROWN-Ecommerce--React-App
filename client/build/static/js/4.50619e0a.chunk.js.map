{"version":3,"sources":["components/CheckoutItem/CheckoutItemStyles.jsx","components/CheckoutItem/CheckoutItem.jsx","components/StripeButton/StripeButton.jsx","pages/Checkout/CheckoutStyles.jsx","pages/Checkout/Checkout.jsx"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","className","onClick","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"6LAEaA,EAAwBC,IAAOC,IAAV,+PAarBC,EAAiBF,IAAOC,IAAV,sHASdE,EAAgBH,IAAOI,KAAV,2GAObC,EAAoBL,YAAOG,EAAPH,CAAH,sHAUjBM,EAAwBN,IAAOC,IAAV,uE,QCRnBM,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG7BH,EA3BM,SAAC,GAAgD,IAA/CO,EAA8C,EAA9CA,SAAUL,EAAoC,EAApCA,UAAWG,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAE1CE,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAE9B,OACI,eAACnB,EAAD,WACI,cAACG,EAAD,UACI,qBAAKiB,IAAKH,EAAUI,IAAI,WAE5B,cAACjB,EAAD,UAAgBY,IAChB,eAACV,EAAD,WACI,qBAAKgB,UAAU,QAAQC,QAAS,kBAAMT,EAAWC,IAAjD,oBACA,+BAAOI,IACP,qBAAKG,UAAU,QAAQC,QAAS,kBAAMV,EAAQE,IAA9C,uBAEJ,cAACX,EAAD,UAAgBc,IAChB,cAACX,EAAD,CAAuBgB,QAAS,kBAAMb,EAAUK,IAAhD,0B,2BCoBGS,EAtCc,SAAC,GAAa,IAAZN,EAAW,EAAXA,MACrBO,EAAyB,IAARP,EAqBvB,OACI,cAAC,IAAD,CACIQ,MAAM,UACNV,KAAK,qBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA5BQ,SAAAA,GACZC,YAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFN,OAAQN,EACRQ,MAAOA,KAGdK,MAAK,SAAAC,GACFC,MAAM,yBAETC,OAAM,SAAAC,GACHC,QAAQC,IAAI,gBAAiBF,GAC7BF,MAAM,wFAeNK,UA/Be,iH,QCJdC,EAAwB7C,IAAOC,IAAV,6RAgBrB6C,EAA0B9C,IAAOC,IAAV,wJAQvB8C,EAAuB/C,IAAOC,IAAV,+NAcpB+C,EAAiBhD,IAAOC,IAAV,2FAMdgD,EAAmBjD,IAAOC,IAAV,2GCAvBiD,EAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,MAIIhD,sBAAQ2C,EAAR3C,EAxCM,SAAC,GAAD,IAAG6C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACjB,eAACT,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UACE,6CAEF,cAACA,EAAD,UACE,iDAEF,cAACA,EAAD,UACE,8CAEF,cAACA,EAAD,UACE,2CAEF,cAACA,EAAD,UACE,+CAIDK,EAAUI,KAAI,SAAA1C,GAAQ,OACrB,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS2C,OAGhC,eAACT,EAAD,sBAAyBM,KACzB,eAACL,EAAD,0EAEE,uBAFF,iDAKA,cAAC,EAAD,CAAsBhC,MAAOqC","file":"static/js/4.50619e0a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;","import { connect } from 'react-redux';\r\n\r\nimport {addItem, clearItemFromCart, removeItem} from '../../Redux/Cart/CartAction';\r\n\r\nimport { CheckoutItemContainer, ImageContainer, QuantityContainer, RemoveButtonContainer, TextContainer } from './CheckoutItemStyles';\r\n\r\nconst CheckoutItem = ({cartItem, clearItem, addItem, removeItem}) => {\r\n  \r\n    const {name, imageUrl, price, quantity} = cartItem;    \r\n    \r\n    return (\r\n        <CheckoutItemContainer>\r\n            <ImageContainer>\r\n                <img src={imageUrl} alt='item' />\r\n            </ImageContainer>\r\n            <TextContainer>{name}</TextContainer>\r\n            <QuantityContainer>\r\n                <div className='arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\r\n                <span>{quantity}</span>\r\n                <div className='arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\r\n            </QuantityContainer>\r\n            <TextContainer>{price}</TextContainer>\r\n            <RemoveButtonContainer onClick={() => clearItem(cartItem)}>&#10005;</RemoveButtonContainer>\r\n        </CheckoutItemContainer>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import StripeCheckout from \"react-stripe-checkout\";\r\n\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({price}) => {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = 'pk_test_51IAkF8Bbado7lwRX9I9R7C2WQJ67I5EYDrWZs2tiq8ZWz3VAE4HYZNxRPx1j3c0xv3uZhQsWGOLYVtmaxlVYGKCb001h2x4Eqa';\r\n\r\n    const onToken = token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token: token\r\n            }   \r\n        })\r\n        .then(response => {\r\n            alert('payment successful')\r\n        })\r\n        .catch(error => {\r\n            console.log('Payment error', error);\r\n            alert('There was an error with your payment, please make sure you use the provided card');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <StripeCheckout\r\n            label='Pay Now'\r\n            name='CRWN Clothing Ltd.'\r\n            billingAddress\r\n            shippingAddress\r\n            image='https://svgshare.com/i/CUz.svg'\r\n            description={`Your Total is $${price}`}\r\n            amount={priceForStripe}\r\n            panelLabel='Pay Now'\r\n            token={onToken}\r\n            stripeKey={publishableKey}\r\n        />\r\n    );\r\n};\r\n\r\nexport default StripeCheckoutButton;","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;","import { connect } from 'react-redux';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport CheckoutItem from '../../components/CheckoutItem/CheckoutItem';\r\n\r\nimport StripeCheckoutButton from '../../components/StripeButton/StripeButton';\r\n\r\nimport { selectCartItems, selectCartTotal } from '../../Redux/Cart/CartSelcetors';\r\n\r\nimport { CheckoutHeaderContainer, CheckoutPageContainer, HeaderBlockContainer, TotalContainer, WarningContainer } from './CheckoutStyles';\r\n\r\nconst CheckoutPage = ({ cartItems, total }) => (\r\n    <CheckoutPageContainer>\r\n      <CheckoutHeaderContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Product</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Description</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Quantity</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Price</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Remove</span>\r\n        </HeaderBlockContainer>\r\n      </CheckoutHeaderContainer>   \r\n\r\n        {cartItems.map(cartItem => (\r\n          <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n        ))}\r\n\r\n      <TotalContainer>TOTAL: ${total}</TotalContainer>\r\n      <WarningContainer>\r\n        '\"Please Use The Following Test Credit Card For Payments\"'\r\n        <br />\r\n        4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\r\n      </WarningContainer>\r\n      <StripeCheckoutButton price={total} />\r\n    </CheckoutPageContainer>\r\n);\r\n  \r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n  }\r\n);\r\n  \r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n\r\n"],"sourceRoot":""}